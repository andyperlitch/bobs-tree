# View preview at http://editor.swagger.io/#/
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Bob's Tree API
  description: This API is for you grandpa!
  version: "1.0.0"
# the domain of the service
host: localhost:7331
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /people:
    get:
      summary: People in the family tree.
      description: |
        The People endpoint returns people in the family tree based on given
        query parameters. A request without parameters will attempt to return
        the entire tree, depending on its size.
      parameters:
        - name: search
          in: query
          description: Find people based on a search phrase
          required: false
          type: string
        - name: by_person_id
          in: query
          description: |
            Find people based on how closely related they are 
            to another person, by that person's id
          required: false
          type: string
          format: uuid
        - name: by_person_id_distance
          in: query
          description: |
            When using the by_person_id field, you may specify how many relationships
            away from the given person to go. For example, a value of 1 will get parents,
            children, and siblings. 2 will yield the first group plus grandparents,
            grandchildren, aunts and uncles.
          required: false
          type: number
          format: integer
      responses:
        200:
          description: An array of people
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Person:
    type: object
    properties:
      person_id:
        type: string
        description: Unique identifier representing a specific person.
      birth_date:
        type: string
        format: date
        description: The person's date of birth
      death_date:
        type: string
        format: date
        description: The person's date of death
      birth_place:
        type: string
        description: The location of birth
      death_place:
        type: string
        description: The location of death
      profile_picture:
        type: string
        description: Url for a profile picture
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

  # PriceEstimate:
  #   type: object
  #   properties:
  #     product_id:
  #       type: string
  #       description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
  #     currency_code:
  #       type: string
  #       description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
  #     display_name:
  #       type: string
  #       description: Display name of product.
  #     estimate:
  #       type: string
  #       description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
  #     low_estimate:
  #       type: number
  #       description: Lower bound of the estimated price.
  #     high_estimate:
  #       type: number
  #       description: Upper bound of the estimated price.
  #     surge_multiplier:
  #       type: number
  #       description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  # Profile:
  #   type: object
  #   properties:
  #     first_name:
  #       type: string
  #       description: First name of the Uber user.
  #     last_name:
  #       type: string
  #       description: Last name of the Uber user.
  #     email:
  #       type: string
  #       description: Email address of the Uber user
  #     picture:
  #       type: string
  #       description: Image URL of the Uber user.
  #     promo_code:
  #       type: string
  #       description: Promo code of the Uber user.
  # Activity:
  #   type: object
  #   properties:
  #     uuid:
  #       type: string
  #       description: Unique identifier for the activity
  # Activities:
  #   type: object
  #   properties:
  #     offset:
  #       type: integer
  #       format: int32
  #       description: Position in pagination.
  #     limit:
  #       type: integer
  #       format: int32
  #       description: Number of items to retrieve (100 max).
  #     count:
  #       type: integer
  #       format: int32
  #       description: Total number of items available.
  #     history:
  #       type: array
  #       items:
  #         $ref: '#/definitions/Activity'
